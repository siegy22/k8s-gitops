# Default values for mautrix-whatsapp.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: dock.mau.dev/mautrix/whatsapp
  tag: "{{ .Chart.AppVersion }}"
  pullPolicy: Always

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

strategy:
  type: Recreate

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # privileged: true
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  externalTrafficPolicy:
  type: ClusterIP
  port: 29318

probes:
  liveness:
    failureThreshold: 5
    periodSeconds: 10
  readiness:
    failureThreshold: 5
    periodSeconds: 10
  startup:
    initialDelaySeconds: 5
    failureThreshold: 30
    periodSeconds: 10

ingress:
  enabled: false
  ## ingress.ingressClassName -- Support for ingress class name that was introduced in kubernetes 1.19
  ingressClassName:
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

podAnnotations: {}

deploymentAnnotations: {}

# Use PVC to store sqlite database, if this is enabled use the following snippet in your configuration.yaml
#
# appservice:
#   database:
#     # The database type. "sqlite3-fk-wal" and "postgres" are supported.
#     type: sqlite3-fk-wal
#     # The database URI.
#     #   SQLite: A raw file path is supported, but `file:<path>?_txlock=immediate` is recommended.
#     #           https://github.com/mattn/go-sqlite3#connection-string
#     #   Postgres: Connection string. For example, postgres://user:password@host/database?sslmode=disable
#     #             To connect via Unix socket, use something like postgres:///dbname?host=/var/run/postgresql
#     uri: file:/sqlite/db.sqlite?_txlock=immediate
persistence:
  enabled: true

  # storageClass: "-"
  accessMode: ReadWriteOnce
  size: 1Gi

# kubectl create secret generic my-secret --from-file=config.yaml --from-file=registration.yaml
existingSecret: false

# Generate the configuration.yaml and registration.yaml files by running docker locally.
# https://docs.mau.fi/bridges/general/docker-setup.html?bridge=whatsapp#setup
config:

  # Paste the configuration.yaml that has been generated by the bridge
  metrics:
    enabled: true
    listen: 0.0.0.0:8000
  appservice:
    hostname: 0.0.0.0
    port: 29318

registration:
  # Paste the registration.yaml in here e.g.
  # id: whatsapp
  # url: http://whatsapp-bridge:29318
  # ...
