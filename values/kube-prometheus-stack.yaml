crds:
  enabled: true

defaultRules:
  create: true
  rules:
    kubeControllerManager: false
    kubeSchedulerAlerting: false
    kubeSchedulerRecording: false
  disabled:
    KubeClientCertificateExpiration: true

kubeScheduler:
  enabled: false
kubeControllerManager:
  enabled: false

alertmanager:
  config:
    global:
      resolve_timeout: 5m
    inhibit_rules:
      - source_matchers:
          - 'severity = critical'
        target_matchers:
          - 'severity =~ warning|info'
        equal:
          - 'namespace'
          - 'alertname'
      - source_matchers:
          - 'severity = warning'
        target_matchers:
          - 'severity = info'
        equal:
          - 'namespace'
          - 'alertname'
      - source_matchers:
          - 'alertname = InfoInhibitor'
        target_matchers:
          - 'severity = info'
        equal:
          - 'namespace'
      - target_matchers:
          - 'alertname = InfoInhibitor'
    route:
      group_by: ['namespace']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 12h
      receiver: 'discord'
      routes:
      - receiver: 'null'
        matchers:
          - alertname = "Watchdog"
    receivers:
    - name: 'null'
    - name: 'discord'
      discord_configs:
        - webhook_url: 'https://discord.com/api/webhooks/1300006493764190269/daYcAlGwAuHPTmsdb8pCfRTvgZKEoPwtlzA5uR8ZolDbMSLlINcyWe86XYk2KT8dJF2q'
    templates:
    - '/etc/alertmanager/config/*.tmpl'

  alertmanagerSpec:
    storage:
      volumeClaimTemplate:
        spec:
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 5Gi

grafana:
  admin:
    existingSecret: grafana-admin-credentials
    userKey: admin-user
    passwordKey: admin-password

  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
      cert-manager.io/cluster-issuer: letsencrypt-prod
    hosts:
      - grafana.siegrist.io
    tls:
    - secretName: grafana-tls
      hosts:
      - grafana.siegrist.io

prometheus:
  prometheusSpec:
    storageSpec:
     volumeClaimTemplate:
       spec:
         accessModes: ["ReadWriteOnce"]
         resources:
           requests:
             storage: 10Gi
